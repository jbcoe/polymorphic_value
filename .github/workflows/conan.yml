name: Conan

on: [push]

jobs:
  build:
    name: ${{ matrix.settings.name }} ${{ matrix.configuration }}
    runs-on: ${{ matrix.settings.os }}
    strategy:
      matrix:
        configuration: [ "Release", "Debug" ]
        settings:
        - {
            name: "Gcc 11.0.0",
            os: ubuntu-20.04,
            compiler: { type: GCC, version: 11, cc: "gcc-11", cxx: "g++-11" },
            lib: "libstdc++11"
          }
        - {
            name: "Clang 12.0.0",
            os: ubuntu-20.04,
            compiler: { type: CLANG, version: 12, cc: "clang-12", cxx: "clang++-12" },
            lib: "libc++"
          }
        - {
            name: "Visual Studio 2019",
            os: windows-latest,
            compiler: { type: VISUAL, version: 16, cc: "cl", cxx: "cl" }
          }
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        if: matrix.settings.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          vs-version: "16.5"
      - name: Install Latest GCC 
        if: matrix.settings.compiler.type == 'GCC'
        shell: bash
        run: |
          sudo apt update
          sudo apt install gcc-11-multilib g++-11-multilib
      - name: Install Clang
        if: matrix.settings.compiler.type == 'CLANG'
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.settings.compiler.version }}
          sudo apt install -y libc++-${{ matrix.settings.compiler.version }}-dev libc++abi-${{ matrix.settings.compiler.version }}-dev libunwind-${{ matrix.settings.compiler.version }}-dev
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Conan Package Tools
        run: |
          pip install -U conan_package_tools
      - name: Configure Conan
        shell: bash
        run: |
          conan config init
          if [[ "${{ matrix.settings.compiler.type }}" == "GCC" || "${{ matrix.settings.compiler.type }}" == "CLANG" ]]; then
            conan profile update settings.compiler.libcxx=${{ matrix.settings.lib }} default
          fi
          conan profile show default
      - name: Build Conan
        shell: bash
        env:
          CONAN_USERNAME: twonington
          CONAN_UPLOAD: https://twonington.jfrog.io/artifactory/api/conan/conan-oss
          CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
          CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
          CONAN_ARCHS: x86_64
          CONAN_BUILD_TYPES: ${{ matrix.configuration }}
          CC: ${{ matrix.settings.compiler.cc }}
          CXX: ${{ matrix.settings.compiler.cxx }}
          CONAN_${{ matrix.settings.compiler.type }}_VERSIONS: ${{ matrix.settings.compiler.version }}
        run: |
          python .conan/build.py